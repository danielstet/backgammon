<mxfile host="65bd71144e">
    <diagram id="GZon_cdIXV4vmVTwgJqc" name="Page-1">
        <mxGraphModel dx="645" dy="602" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;strong&gt;&lt;code&gt;dice&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="40" width="280" height="240" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;strong&gt;Purpose&lt;/strong&gt;: Simulates rolling two six-sided dice." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="30" width="280" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="&lt;strong&gt;Implementation&lt;/strong&gt;:&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;dice&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;): number[] {&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; first = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; second = &lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-title class_&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;random&lt;/span&gt;() * &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [first, second];&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Uses &lt;/span&gt;&lt;code&gt;Math.random()&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; to generate random numbers between 1 and 6 for each die.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Returns an array containing the two rolled numbers.&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="60" width="280" height="180" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;strong&gt;&lt;code&gt;rollingDice&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="360" y="40" width="440" height="700" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;strong&gt;Purpose&lt;/strong&gt;: Handles the logic of rolling dice for the current turn and updating the state." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="6">
                    <mxGeometry y="30" width="440" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;strong&gt;Parameters&lt;/strong&gt;: Takes a &lt;code&gt;tempTurn&lt;/code&gt;, which is an instance of &lt;code&gt;ThisTurn&lt;/code&gt; representing the current state of the turn." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="6">
                    <mxGeometry y="70" width="440" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="&lt;strong&gt;Implementation:&lt;br&gt;&lt;/strong&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;rollingDice&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;tempTurn: ThisTurn&lt;/span&gt;) {&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; thisTurn = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;ThisTurn&lt;/span&gt;(&lt;br&gt;    tempTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;,&lt;br&gt;    tempTurn.&lt;span class=&quot;hljs-property&quot;&gt;opponentPlayer&lt;/span&gt;,&lt;br&gt;    &lt;span class=&quot;hljs-title function_&quot;&gt;dice&lt;/span&gt;(),&lt;br&gt;    &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;&lt;br&gt;  );&lt;br&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;Creates a new instance of &lt;code&gt;ThisTurn&lt;/code&gt; with the current player, opponent player, the results of the dice roll (using the &lt;code&gt;dice&lt;/code&gt; function), and sets &lt;code&gt;_rolledDice&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="6">
                    <mxGeometry y="120" width="440" height="200" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="&lt;strong&gt;Displaying the Result&lt;/strong&gt;: (Part of rollingDice func)" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="6">
                    <mxGeometry y="320" width="440" height="380" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="The function checks if the two rolled dice are equal (indicating a double):&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;dices&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;] === thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;dices&lt;/span&gt;[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]) {&lt;br/&gt;  toast.&lt;span class=&quot;hljs-title function_&quot;&gt;success&lt;/span&gt;(&lt;br/&gt;    &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${thisTurn.turnPlayer.icon}&lt;/span&gt;&lt;br/&gt;    ðŸŽ² Rolled a double &lt;span class=&quot;hljs-subst&quot;&gt;${thisTurn.dices}&lt;/span&gt; ðŸŽ²`&lt;/span&gt;,&lt;br/&gt;    &lt;span class=&quot;hljs-title function_&quot;&gt;toastStyle&lt;/span&gt;(thisTurn)&lt;br/&gt;  );&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;  toast.&lt;span class=&quot;hljs-title function_&quot;&gt;success&lt;/span&gt;(&lt;br/&gt;    &lt;span class=&quot;hljs-string&quot;&gt;`&lt;span class=&quot;hljs-subst&quot;&gt;${thisTurn.turnPlayer.icon}&lt;/span&gt;&lt;br/&gt;    ðŸŽ² Rolled &lt;span class=&quot;hljs-subst&quot;&gt;${thisTurn.dices}&lt;/span&gt; ðŸŽ²`&lt;/span&gt;,&lt;br/&gt;    &lt;span class=&quot;hljs-title function_&quot;&gt;toastStyle&lt;/span&gt;(thisTurn)&lt;br/&gt;  );&lt;br/&gt;}&lt;br&gt;&lt;br&gt;Uses &lt;code&gt;react-hot-toast&lt;/code&gt; to show a toast notification with the result of the roll. The notification includes the icon of the current player and whether they rolled a double.&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="10">
                    <mxGeometry y="30" width="440" height="290" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;p style=&quot;line-height: 100%;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Return Value&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;:&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 100%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Finally, it returns the updated &lt;/span&gt;&lt;code&gt;thisTurn&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; instance with the new dice results.&lt;/span&gt;&lt;/p&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="10">
                    <mxGeometry y="320" width="440" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="Summary" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="40" y="320" width="280" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="The &lt;code&gt;dice&lt;/code&gt; function generates two random numbers representing the results of a dice roll." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="14">
                    <mxGeometry y="30" width="280" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="The &lt;code&gt;rollingDice&lt;/code&gt; function manages the state of the current turn, updates it with the new dice results, and displays a notification indicating the outcome of the roll." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="14">
                    <mxGeometry y="100" width="280" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="Together, these functions facilitate the gameâ€™s mechanics by allowing players to roll dice and react accordingly based on the outcomes." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="14">
                    <mxGeometry y="180" width="280" height="100" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>