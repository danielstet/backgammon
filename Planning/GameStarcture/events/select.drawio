<mxfile host="65bd71144e">
    <diagram id="F63xqs_IiFnAp9ZoGiMq" name="Page-1">
        <mxGraphModel dx="867" dy="602" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;code&gt;selecting&lt;/code&gt; Function&lt;/strong&gt;:&lt;/font&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="40" width="280" height="480" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;strong&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;Purpose&lt;/font&gt;&lt;/strong&gt;: &lt;br&gt;&lt;br&gt;Manages the selection of game pieces by players and handles the different scenarios that arise during the selection process." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="30" width="280" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="&lt;p style=&quot;line-height: 119%;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;Parameters:&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;code&gt;index&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: The index of the selected bar.&lt;/span&gt;&lt;br&gt;&lt;code&gt;game&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: The current state of the game.&lt;/span&gt;&lt;br&gt;&lt;code&gt;thisTurn&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: The current turn's state.&lt;/span&gt;&lt;br&gt;&lt;code&gt;thisMove&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: The current move being made.&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="120" width="280" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Implementation&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;:&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;/font&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Initial Checks&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Ensures the game is active, dice have been rolled, and pieces are available to move.&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Error Handling&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Displays toast notifications for various errors, such as trying to select an empty bar or the opponent's bar.&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Deselecting Logic&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: If the selected index matches the current move's &lt;/span&gt;&lt;code&gt;fromBarIdx&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, it resets the move.&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Setting Move Logic&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Calls appropriate helper functions to set the &lt;/span&gt;&lt;code&gt;from&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; or &lt;/span&gt;&lt;code&gt;to&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; bar based on the selection.&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="230" width="280" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;strong&gt;&lt;code&gt;settingFromBar&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="1">
                    <mxGeometry x="360" y="40" width="280" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;Purpose:&lt;br&gt;&lt;/b&gt;Sets the &lt;code&gt;from&lt;/code&gt; bar for a piece that the player wants to move.&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="6">
                    <mxGeometry y="30" width="280" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;strong&gt;Parameters&lt;/strong&gt;: Takes the current game state, index of the selected bar, and turn/move objects.&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="6">
                    <mxGeometry y="100" width="280" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;Implementation&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;:&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Calculates possible moves from the selected bar and updates &lt;/span&gt;&lt;code&gt;thisMove&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; accordingly.&lt;/span&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="6">
                    <mxGeometry y="170" width="280" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="&lt;strong&gt;&lt;code&gt;settingFromOutBar&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="360" y="360" width="280" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="&lt;strong&gt;Purpose&lt;/strong&gt;: Configures the &lt;code&gt;from&lt;/code&gt; bar when selecting from the out bar." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="10">
                    <mxGeometry y="30" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;strong&gt;Implementation&lt;/strong&gt;: Calls a calculation function to find possible moves from the out bar." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="10">
                    <mxGeometry y="80" width="280" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="&lt;strong&gt;&lt;code&gt;settingFromEndBar&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="40" y="560" width="280" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="&lt;strong&gt;Purpose&lt;/strong&gt;: Configures the &lt;code&gt;from&lt;/code&gt; bar when selecting from the end bar." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="14">
                    <mxGeometry y="30" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="&lt;strong&gt;Implementation&lt;/strong&gt;: Checks if the player is ready to end and sets possible moves to ending dice bars." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="14">
                    <mxGeometry y="80" width="280" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;strong&gt;&lt;code&gt;settingToBar&lt;/code&gt; Function&lt;/strong&gt;:" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="360" y="560" width="280" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="19" value="&lt;strong&gt;Purpose&lt;/strong&gt;: Sets the &lt;code&gt;to&lt;/code&gt; bar for moving a piece." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="18">
                    <mxGeometry y="30" width="280" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="&lt;strong&gt;Implementation&lt;/strong&gt;: Updates the move, executes the piece movement, and calculates the moves made during this turn." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="18">
                    <mxGeometry y="80" width="280" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="Key Logic" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="40" y="760" width="600" height="200" as="geometry"/>
                </mxCell>
                <mxCell id="22" value="&lt;strong&gt;Error Handling&lt;/strong&gt;: The &lt;code&gt;selecting&lt;/code&gt; function is heavily focused on validating the player's actions. If any action is invalid (like selecting an empty bar or trying to select the opponent's bar), it immediately returns and displays an error message." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="21">
                    <mxGeometry y="30" width="600" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="&lt;strong&gt;Piece Movement&lt;/strong&gt;: Once a valid &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; are established, the &lt;code&gt;movingPiece&lt;/code&gt; function is called to handle the actual movement of the pieces on the game board." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="21">
                    <mxGeometry y="100" width="600" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="&lt;strong&gt;Turn Management&lt;/strong&gt;: The function also checks if the player is ready to end the game after moving pieces and manages the transition to the opponent's turn when necessary." style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="21">
                    <mxGeometry y="160" width="600" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="25" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Usage&lt;/font&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=12;" vertex="1" parent="1">
                    <mxGeometry x="40" y="980" width="600" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;This structure is essential for ensuring that player interactions are validated, guiding them through the game logic while maintaining the flow of the game. Each helper function is responsible for a specific aspect of the movement logic, making the overall code modular and easier to maintain or extend in the future.&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=12;" vertex="1" parent="25">
                    <mxGeometry y="30" width="600" height="80" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>