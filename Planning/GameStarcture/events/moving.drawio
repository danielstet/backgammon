<mxfile host="65bd71144e">
    <diagram id="r8uHExLi2j0d200EScn2" name="Page-1">
        <mxGraphModel dx="645" dy="602" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;code&gt;movingPiece&lt;/code&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="40" width="160" height="300" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;Parameters&lt;/font&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt; -&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;&lt;code&gt;game: Game&lt;/code&gt;&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: The current state of the game, including the board and player information.&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;&lt;code&gt;thisTurn: ThisTurn&lt;/code&gt;&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Contains information about the current turn, including the active player and their moves.&lt;/span&gt;&lt;br&gt;&lt;strong style=&quot;background-color: initial;&quot;&gt;&lt;code&gt;thisMove: ThisMove&lt;/code&gt;&lt;/strong&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Represents the move being made, including the source and destination bar indices.&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="30" width="160" height="210" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="Item 2" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="240" width="160" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="Item 3" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;" vertex="1" parent="2">
                    <mxGeometry y="270" width="160" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="Logic Breakdown" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="1">
                    <mxGeometry x="240" y="40" width="560" height="1040" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;p style=&quot;line-height: 70%;&quot;&gt;&lt;strong&gt;Extract Indices&lt;/strong&gt;:&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 13px; line-height: 70%;&quot;&gt;&lt;code style=&quot;&quot; class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&lt;span style=&quot;&quot; class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [fromBarIdx, toBarIdx] = [thisMove.&lt;span style=&quot;&quot; class=&quot;hljs-property&quot;&gt;fromBarIdx&lt;/span&gt;, thisMove.&lt;span style=&quot;&quot; class=&quot;hljs-property&quot;&gt;toBarIdx&lt;/span&gt;];&lt;/font&gt;&lt;/code&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 13px; line-height: 70%;&quot;&gt;&lt;code style=&quot;background-color: transparent;&quot; class=&quot;!whitespace-pre hljs language-javascript&quot;&gt;This retrieves the starting (&lt;code style=&quot;&quot;&gt;fromBarIdx&lt;/code&gt;) and target (&lt;code style=&quot;&quot;&gt;toBarIdx&lt;/code&gt;) positions for the move.&lt;/code&gt;&lt;/p&gt;&lt;pre class=&quot;!overflow-visible&quot;&gt;&lt;div class=&quot;dark bg-gray-950 contain-inline-size rounded-md border-[0.5px] border-token-border-medium relative&quot;&gt;&lt;div class=&quot;sticky top-9 md:top-[5.75rem]&quot;&gt;&lt;div class=&quot;absolute bottom-0 right-2 flex h-9 items-center&quot;&gt;&lt;div class=&quot;flex items-center rounded bg-token-main-surface-secondary px-2 font-sans text-xs text-token-text-secondary&quot;&gt;&lt;span data-state=&quot;closed&quot; class=&quot;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="6">
                    <mxGeometry y="30" width="560" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;strong&gt;Handling Opponent's Piece&lt;/strong&gt;:&lt;br&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;if (game.board[toBarIdx as number].includes(thisTurn.opponentPlayer.name)) {&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;&amp;nbsp; &amp;nbsp; thisTurn.opponentPlayer.outBar.push(&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; game.board[toBarIdx as number].pop() as string&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;&amp;nbsp; &amp;nbsp; );&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;&amp;nbsp; &amp;nbsp; // ...&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot; color=&quot;#ffffff&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 140%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;If the destination bar contains an opponent's piece:&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;The piece is removed from the board and added to the opponent's out bar (indicating they are temporarily removed from play).&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;It updates the opponent's status to not in the end.&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="6">
                    <mxGeometry y="110" width="560" height="230" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="&lt;strong&gt;Returning an Out Piece&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fromBarIdx === thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;outBarIdx&lt;/span&gt;) {&lt;br&gt;    game.&lt;span class=&quot;hljs-property&quot;&gt;board&lt;/span&gt;[toBarIdx &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; number].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;br&gt;        thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;outBar&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; string&lt;br&gt;    );&lt;br&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; game;&lt;br&gt;}&lt;br&gt;&lt;br&gt;If the move is from the out bar, it moves a piece from the out bar to the target bar.&lt;br&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="6">
                    <mxGeometry y="340" width="560" height="200" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;p style=&quot;line-height: 140%;&quot;&gt;&lt;strong&gt;Taking a Piece Out to the End Bar&lt;/strong&gt;:&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (fromBarIdx === thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;endBarIdx&lt;/span&gt;) {&lt;br&gt;    thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;endBar&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;br&gt;        game.&lt;span class=&quot;hljs-property&quot;&gt;board&lt;/span&gt;[toBarIdx &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; number].&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; string&lt;br&gt;    );&lt;br&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (thisTurn.&lt;span class=&quot;hljs-property&quot;&gt;turnPlayer&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;endBar&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; === &lt;span class=&quot;hljs-number&quot;&gt;15&lt;/span&gt;) {&lt;br&gt;        game.&lt;span class=&quot;hljs-property&quot;&gt;gameOn&lt;/span&gt; = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;;&lt;br&gt;        &lt;span class=&quot;hljs-title function_&quot;&gt;celebrateGameEnd&lt;/span&gt;(thisTurn);&lt;br&gt;    }&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; game;&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;If the move is from the end bar, it adds the piece to the player's end bar.&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;If a player has moved all their pieces to the end bar (15 pieces), the game ends, and a celebration message is triggered.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="6">
                    <mxGeometry y="540" width="560" height="330" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="&lt;p style=&quot;line-height: 110%;&quot;&gt;&lt;strong&gt;Moving from One Bar to Another&lt;/strong&gt;:&lt;/p&gt;&lt;p style=&quot;line-height: 110%;&quot;&gt;game.&lt;span class=&quot;hljs-property&quot;&gt;board&lt;/span&gt;[toBarIdx &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; number].&lt;span class=&quot;hljs-title function_&quot;&gt;push&lt;/span&gt;(&lt;br&gt;    game.&lt;span class=&quot;hljs-property&quot;&gt;board&lt;/span&gt;[fromBarIdx &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; number].&lt;span class=&quot;hljs-title function_&quot;&gt;pop&lt;/span&gt;() &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; string&lt;br&gt;);&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 110%;&quot;&gt;If the move is a standard movement (from one bar to another), it pops a piece from the starting bar and pushes it to the target bar.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;fontSize=14;" vertex="1" parent="6">
                    <mxGeometry y="870" width="560" height="170" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Summary&lt;/font&gt;" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=30;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;labelBackgroundColor=#18141D;fontSize=12;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="40" y="360" width="160" height="480" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="&lt;h3 style=&quot;font-size: 14px;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;The&lt;/font&gt;&lt;/span&gt; &lt;code style=&quot;font-weight: normal;&quot;&gt;movingPiece&lt;/code&gt;&lt;span style=&quot;background-color: initial; font-weight: normal;&quot;&gt; function covers several scenarios: moving a piece from the out bar, handling opponent pieces, moving from the end bar, and standard movements.&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;&lt;h3 style=&quot;font-size: 14px;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;It updates the game state accordingly and handles game-ending logic when a player has successfully moved all their pieces.&lt;/font&gt;&lt;/span&gt;&lt;br&gt;&lt;/font&gt;&lt;/h3&gt;&lt;div style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 14px;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;By utilizing helper functions like &lt;code style=&quot;&quot;&gt;celebrateGameEnd&lt;/code&gt;, it ensures that user feedback is integrated into the game flow.&lt;/font&gt;&lt;span style=&quot;font-size: 13px; font-weight: normal;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;spacingLeft=4;spacingRight=4;overflow=hidden;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rotatable=0;whiteSpace=wrap;html=1;labelBackgroundColor=none;fontSize=12;fontColor=#FFFFFF;" vertex="1" parent="14">
                    <mxGeometry y="30" width="160" height="450" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>